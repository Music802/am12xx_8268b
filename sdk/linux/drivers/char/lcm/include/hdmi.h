/* HDMI LINK Status */
#define HDMI_LINK_STATUS				10
/* EDID */
#define HDMI_EDID_GET					11

/* HDMI Mode */
#define HDMI_MODE_SET					12
#define HDMI_MODE_GET					13

/* Audio config */
#define HDMI_AUDIO_SET					14
#define HDMI_AUDIO_GET					15

/* AV MUTE */
#define HDMI_AVMUTE_SET					16
#define HDMI_AVMUTE_GET					17

/* DVI QUICK SET */
#define DVI_QUICK_SET					18
#define DVI_QUICK_GET					19

/* Video Configuration */	
#define HDMI_VIDEO_CONFIG_SET			20
#define HDMI_VIDEO_CONFIG_GET			21
/* Audio Configuration */
#define HDMI_AUDIO_CONFIG_SET			22
#define HDMI_AUDIO_CONFIG_GET			23
/* Source Product Descriptor Configuration */
#define HDMI_PRODUCT_DESCRIPTION_SET	24
#define HDMI_PRODUCT_DESCRIPTION_GET	25


/* HDCP config */
#define HDMI_HDCP_SET					40
#define HDMI_HDCP_GET					41

/* HDCP Authentication State */
#define HDCP_AUTH_STATE					42

/* HDCP Private Key List */
#define HDCP_PRIVATE_KEYS_SET			43
/* HDCP Private Key List */
#define HDCP_PRIVATE_KEYS_GET			44
/* HDCP RNG Seed */
#define HDCP_RNG_SEED_SET				45		
/* HDCP RNG Seed */
#define HDCP_RNG_SEED_GET				46		

/* write HDMI Register */
#define HDMI_REG_WRITE					47
/* read HDMI Register */
#define HDMI_REG_READ					48

#define HDCP_UNAUTH_FORCE				49

#define HDMI_SET_PIXEL_COLOR_FORMAT	50

#define HDCP_RI_GET									53
#define HDCP_RIP_GET								54
#define HDMI_AUDIO_MUTE_USING_ASPCR				55
#define HDMI_TEST_AUDIO_PALY_SINWAVE			56

/* MPEG infoframe Descriptor Configuration */
#define HDMI_MPEG_INFOFRAME_SET	57
#define HDMI_MPEG_INFOFRAME_GET	58

#define  HDMI_TRIGGER_VIDEO_FLASH_WHEN_HDCP_AUTH_FAIL 59

enum HDMI_MODE {
	HDMI_MODE_DISABLE = 0,
	HDMI_MODE_DVI,
	HDMI_MODE_HDMI,
};

/*Video ID Code ,colorimetry and  Aspect Ratios */
typedef enum DS_VIDEO_ID_CODE{
    VIDEO_ID_VOID = 0,
	VIDEO_ID_640x480_60P_4_3=1,
	VIDEO_ID_720x480_60P_4_3=2,
	VIDEO_ID_720x480_60P_16_9=3,
	VIDEO_ID_1280x720_60P_16_9=4,
	VIDEO_ID_1920x1080_60I_16_9=5,
	VIDEO_ID_720x480_60I_4_3=6,
	VIDEO_ID_720x480_60I_16_9=7,
	VIDEO_ID_720x240_60P_4_3=8,
	VIDEO_ID_720x240_60P_16_9=9,
	VIDEO_ID_2880x480_60I_4_3=10,
	VIDEO_ID_2880x480_60I_16_9=11,
	VIDEO_ID_2880x240_60P_4_3=12,
	VIDEO_ID_2880x240_60P_16_9=13,
	VIDEO_ID_1440x480_60P_4_3=14,
	VIDEO_ID_1440x480_60P_16_9=15,
	VIDEO_ID_1920x1080_60P_16_9=16,
	VIDEO_ID_720x576_50P_4_3=17,
	VIDEO_ID_720x576_50P_16_9=18,
	VIDEO_ID_1280x720_50P_16_9=19,
	VIDEO_ID_1920x1080_50I_16_9=20,
	VIDEO_ID_720x576_50I_4_3=21,
	VIDEO_ID_720x576_50I_16_9=22,
	VIDEO_ID_720x288_50P_4_3=23,
	VIDEO_ID_720x288_50P_16_9=24,
	VIDEO_ID_2880x576_50I_4_3=25,
	VIDEO_ID_2880x576_50I_16_9=26,
	VIDEO_ID_2880x288_50P_4_3=27,
	VIDEO_ID_2880x288_50P_16_9=28,
	VIDEO_ID_1440x576_50P_4_3=29,
	VIDEO_ID_1440x576_50P_16_9=30,
	VIDEO_ID_1920x1080_50P_16_9=31,
	VIDEO_ID_1920x1080_24P_16_9=32,
	VIDEO_ID_1920x1080_25P_16_9=33,
	VIDEO_ID_1920x1080_30P_16_9=34,
	VIDEO_ID_2880x480_60P_4_3=35,
	VIDEO_ID_2880x480_60P_16_9=36,
	VIDEO_ID_2880x576_50P_4_3=37,
	VIDEO_ID_2880x576_50P_16_9=38,
	VIDEO_ID_1920x1080_1250_50I_16_9=39,	
}DS_VIDEO_ID_CODE;

typedef enum DS_COLORIMETRY_FMT{
	COLORIMETRY_VOID = 0,
	COLORIMETRY_ITU601,
	COLORIMETRY_ITU709,
}DS_COLORIMETRY_FMT;

typedef enum DS_ASPECT_RATIO_FMT{
	ASPECT_RATIO_VOID = 0,
	ASPECT_RATIO_4_3,
	ASPECT_RATIO_16_9,
}DS_ASPECT_RATIO_FMT;

typedef enum DS_VIDEO_TIMING_FMT{
	/// SMPTE 274M
	FMT_2200x1125_1920x1080_60I,
	FMT_2640x1125_1920x1080_50I,
	
	FMT_2200x1125_1920x1080_30P,
	FMT_2640x1125_1920x1080_25P,
	FMT_2750x1125_1920x1080_24P,	

	/// SMPTE 296M
	FMT_1650x750_1280x720_60P,
	FMT_3300x750_1280x720_30P,
	FMT_1980x750_1280x720_50P,
	FMT_3960x750_1280x720_25P,
	FMT_4125x750_1280x720_24P,

	FMT_2304x1250_1920x1152_50I,

	/// ITU-R-656
	FMT_858x525_720x480_60I,
	FMT_864x625_720x576_50I,

	/// SMPTE 293M
	FMT_858x525_720x480_60P,
	FMT_864x625_720x576_50P,

	FMT_1250x810_1024x768_60P,
	FMT_1280x800_60P,
	FMT_1920x1080_60P,
	FMT_800x600_60P,
	FMT_1920x1080_50P,
	FMT_854x480_50P,

	FMT_2080x741_1920x720_59P,
	
	FMT_USER_DEFINED,  //value 18 ,for DVI user defined format
} DS_VIDEO_TIMING_FMT;
int hdmi_init(DS_VIDEO_TIMING_FMT videoFmt,unsigned char hdmi_mode,struct _SPD_InfoFrame* pSpd);
int hdmi_tx_ioctl(unsigned int cmd, unsigned long arg);
int hdmi_close(void);